/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the DestinationLocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationLocation{}

// DestinationLocation The dropoff location details
type DestinationLocation struct {
	Address *Address `json:"address,omitempty"`
	DeliverySlot *DeliverySlot `json:"deliverySlot,omitempty"`
	// The ID of the customer
	CustomerId *string `json:"customerId,omitempty"`
}

// NewDestinationLocation instantiates a new DestinationLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationLocation() *DestinationLocation {
	this := DestinationLocation{}
	return &this
}

// NewDestinationLocationWithDefaults instantiates a new DestinationLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationLocationWithDefaults() *DestinationLocation {
	this := DestinationLocation{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *DestinationLocation) GetAddress() Address {
	if o == nil || IsNil(o.Address) {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationLocation) GetAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *DestinationLocation) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *DestinationLocation) SetAddress(v Address) {
	o.Address = &v
}

// GetDeliverySlot returns the DeliverySlot field value if set, zero value otherwise.
func (o *DestinationLocation) GetDeliverySlot() DeliverySlot {
	if o == nil || IsNil(o.DeliverySlot) {
		var ret DeliverySlot
		return ret
	}
	return *o.DeliverySlot
}

// GetDeliverySlotOk returns a tuple with the DeliverySlot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationLocation) GetDeliverySlotOk() (*DeliverySlot, bool) {
	if o == nil || IsNil(o.DeliverySlot) {
		return nil, false
	}
	return o.DeliverySlot, true
}

// HasDeliverySlot returns a boolean if a field has been set.
func (o *DestinationLocation) HasDeliverySlot() bool {
	if o != nil && !IsNil(o.DeliverySlot) {
		return true
	}

	return false
}

// SetDeliverySlot gets a reference to the given DeliverySlot and assigns it to the DeliverySlot field.
func (o *DestinationLocation) SetDeliverySlot(v DeliverySlot) {
	o.DeliverySlot = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *DestinationLocation) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DestinationLocation) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *DestinationLocation) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *DestinationLocation) SetCustomerId(v string) {
	o.CustomerId = &v
}

func (o DestinationLocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationLocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.DeliverySlot) {
		toSerialize["deliverySlot"] = o.DeliverySlot
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	return toSerialize, nil
}

type NullableDestinationLocation struct {
	value *DestinationLocation
	isSet bool
}

func (v NullableDestinationLocation) Get() *DestinationLocation {
	return v.value
}

func (v *NullableDestinationLocation) Set(val *DestinationLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationLocation(val *DestinationLocation) *NullableDestinationLocation {
	return &NullableDestinationLocation{value: val, isSet: true}
}

func (v NullableDestinationLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


