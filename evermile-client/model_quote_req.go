/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the QuoteReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteReq{}

// QuoteReq A quote request object
type QuoteReq struct {
	// A list of location ids from which the items can be picked up.
	PickupLocations []string `json:"pickupLocations"`
	// A list of locations to which the items can be delivered
	DestinationLocations []DestinationLocation `json:"destinationLocations"`
	// The list of parcels to pick up in this delivery from any **single** source<br>(must all be available at all of the pickup locations in *pickupLocations*)
	Parcels []Parcel `json:"parcels"`
	// Handling instructions for a parcel
	Handling []HandlingInstruction `json:"handling,omitempty"`
	// Proof of delivery requirements for a parcel
	ProofOfDeliveryRequirement []ProofOfDeliveryRequirement `json:"proofOfDeliveryRequirement,omitempty"`
	// Additional handling instructions for the packages
	Instructions *string `json:"instructions,omitempty"`
	// The id of the order that this quote is based on, usually for cases when editing an existing order
	OriginalOrderId *string `json:"originalOrderId,omitempty"`
	// An array of carriers names to exclude from the proposals results
	ExcludeCarriers []CarriersType `json:"excludeCarriers,omitempty"`
	// Which vehicle types to exclude from the request. **note** excluding vehicle types may result in higher prices.
	ExcludedVehicleTypes []VehicleType `json:"excludedVehicleTypes,omitempty"`
	AdditionalProposalTypes []ProposalType `json:"additionalProposalTypes,omitempty"`
}

// NewQuoteReq instantiates a new QuoteReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteReq(pickupLocations []string, destinationLocations []DestinationLocation, parcels []Parcel) *QuoteReq {
	this := QuoteReq{}
	this.PickupLocations = pickupLocations
	this.DestinationLocations = destinationLocations
	this.Parcels = parcels
	return &this
}

// NewQuoteReqWithDefaults instantiates a new QuoteReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteReqWithDefaults() *QuoteReq {
	this := QuoteReq{}
	return &this
}

// GetPickupLocations returns the PickupLocations field value
func (o *QuoteReq) GetPickupLocations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PickupLocations
}

// GetPickupLocationsOk returns a tuple with the PickupLocations field value
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetPickupLocationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PickupLocations, true
}

// SetPickupLocations sets field value
func (o *QuoteReq) SetPickupLocations(v []string) {
	o.PickupLocations = v
}

// GetDestinationLocations returns the DestinationLocations field value
func (o *QuoteReq) GetDestinationLocations() []DestinationLocation {
	if o == nil {
		var ret []DestinationLocation
		return ret
	}

	return o.DestinationLocations
}

// GetDestinationLocationsOk returns a tuple with the DestinationLocations field value
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetDestinationLocationsOk() ([]DestinationLocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationLocations, true
}

// SetDestinationLocations sets field value
func (o *QuoteReq) SetDestinationLocations(v []DestinationLocation) {
	o.DestinationLocations = v
}

// GetParcels returns the Parcels field value
func (o *QuoteReq) GetParcels() []Parcel {
	if o == nil {
		var ret []Parcel
		return ret
	}

	return o.Parcels
}

// GetParcelsOk returns a tuple with the Parcels field value
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetParcelsOk() ([]Parcel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parcels, true
}

// SetParcels sets field value
func (o *QuoteReq) SetParcels(v []Parcel) {
	o.Parcels = v
}

// GetHandling returns the Handling field value if set, zero value otherwise.
func (o *QuoteReq) GetHandling() []HandlingInstruction {
	if o == nil || IsNil(o.Handling) {
		var ret []HandlingInstruction
		return ret
	}
	return o.Handling
}

// GetHandlingOk returns a tuple with the Handling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetHandlingOk() ([]HandlingInstruction, bool) {
	if o == nil || IsNil(o.Handling) {
		return nil, false
	}
	return o.Handling, true
}

// HasHandling returns a boolean if a field has been set.
func (o *QuoteReq) HasHandling() bool {
	if o != nil && !IsNil(o.Handling) {
		return true
	}

	return false
}

// SetHandling gets a reference to the given []HandlingInstruction and assigns it to the Handling field.
func (o *QuoteReq) SetHandling(v []HandlingInstruction) {
	o.Handling = v
}

// GetProofOfDeliveryRequirement returns the ProofOfDeliveryRequirement field value if set, zero value otherwise.
func (o *QuoteReq) GetProofOfDeliveryRequirement() []ProofOfDeliveryRequirement {
	if o == nil || IsNil(o.ProofOfDeliveryRequirement) {
		var ret []ProofOfDeliveryRequirement
		return ret
	}
	return o.ProofOfDeliveryRequirement
}

// GetProofOfDeliveryRequirementOk returns a tuple with the ProofOfDeliveryRequirement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetProofOfDeliveryRequirementOk() ([]ProofOfDeliveryRequirement, bool) {
	if o == nil || IsNil(o.ProofOfDeliveryRequirement) {
		return nil, false
	}
	return o.ProofOfDeliveryRequirement, true
}

// HasProofOfDeliveryRequirement returns a boolean if a field has been set.
func (o *QuoteReq) HasProofOfDeliveryRequirement() bool {
	if o != nil && !IsNil(o.ProofOfDeliveryRequirement) {
		return true
	}

	return false
}

// SetProofOfDeliveryRequirement gets a reference to the given []ProofOfDeliveryRequirement and assigns it to the ProofOfDeliveryRequirement field.
func (o *QuoteReq) SetProofOfDeliveryRequirement(v []ProofOfDeliveryRequirement) {
	o.ProofOfDeliveryRequirement = v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *QuoteReq) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *QuoteReq) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *QuoteReq) SetInstructions(v string) {
	o.Instructions = &v
}

// GetOriginalOrderId returns the OriginalOrderId field value if set, zero value otherwise.
func (o *QuoteReq) GetOriginalOrderId() string {
	if o == nil || IsNil(o.OriginalOrderId) {
		var ret string
		return ret
	}
	return *o.OriginalOrderId
}

// GetOriginalOrderIdOk returns a tuple with the OriginalOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetOriginalOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalOrderId) {
		return nil, false
	}
	return o.OriginalOrderId, true
}

// HasOriginalOrderId returns a boolean if a field has been set.
func (o *QuoteReq) HasOriginalOrderId() bool {
	if o != nil && !IsNil(o.OriginalOrderId) {
		return true
	}

	return false
}

// SetOriginalOrderId gets a reference to the given string and assigns it to the OriginalOrderId field.
func (o *QuoteReq) SetOriginalOrderId(v string) {
	o.OriginalOrderId = &v
}

// GetExcludeCarriers returns the ExcludeCarriers field value if set, zero value otherwise.
func (o *QuoteReq) GetExcludeCarriers() []CarriersType {
	if o == nil || IsNil(o.ExcludeCarriers) {
		var ret []CarriersType
		return ret
	}
	return o.ExcludeCarriers
}

// GetExcludeCarriersOk returns a tuple with the ExcludeCarriers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetExcludeCarriersOk() ([]CarriersType, bool) {
	if o == nil || IsNil(o.ExcludeCarriers) {
		return nil, false
	}
	return o.ExcludeCarriers, true
}

// HasExcludeCarriers returns a boolean if a field has been set.
func (o *QuoteReq) HasExcludeCarriers() bool {
	if o != nil && !IsNil(o.ExcludeCarriers) {
		return true
	}

	return false
}

// SetExcludeCarriers gets a reference to the given []CarriersType and assigns it to the ExcludeCarriers field.
func (o *QuoteReq) SetExcludeCarriers(v []CarriersType) {
	o.ExcludeCarriers = v
}

// GetExcludedVehicleTypes returns the ExcludedVehicleTypes field value if set, zero value otherwise.
func (o *QuoteReq) GetExcludedVehicleTypes() []VehicleType {
	if o == nil || IsNil(o.ExcludedVehicleTypes) {
		var ret []VehicleType
		return ret
	}
	return o.ExcludedVehicleTypes
}

// GetExcludedVehicleTypesOk returns a tuple with the ExcludedVehicleTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetExcludedVehicleTypesOk() ([]VehicleType, bool) {
	if o == nil || IsNil(o.ExcludedVehicleTypes) {
		return nil, false
	}
	return o.ExcludedVehicleTypes, true
}

// HasExcludedVehicleTypes returns a boolean if a field has been set.
func (o *QuoteReq) HasExcludedVehicleTypes() bool {
	if o != nil && !IsNil(o.ExcludedVehicleTypes) {
		return true
	}

	return false
}

// SetExcludedVehicleTypes gets a reference to the given []VehicleType and assigns it to the ExcludedVehicleTypes field.
func (o *QuoteReq) SetExcludedVehicleTypes(v []VehicleType) {
	o.ExcludedVehicleTypes = v
}

// GetAdditionalProposalTypes returns the AdditionalProposalTypes field value if set, zero value otherwise.
func (o *QuoteReq) GetAdditionalProposalTypes() []ProposalType {
	if o == nil || IsNil(o.AdditionalProposalTypes) {
		var ret []ProposalType
		return ret
	}
	return o.AdditionalProposalTypes
}

// GetAdditionalProposalTypesOk returns a tuple with the AdditionalProposalTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteReq) GetAdditionalProposalTypesOk() ([]ProposalType, bool) {
	if o == nil || IsNil(o.AdditionalProposalTypes) {
		return nil, false
	}
	return o.AdditionalProposalTypes, true
}

// HasAdditionalProposalTypes returns a boolean if a field has been set.
func (o *QuoteReq) HasAdditionalProposalTypes() bool {
	if o != nil && !IsNil(o.AdditionalProposalTypes) {
		return true
	}

	return false
}

// SetAdditionalProposalTypes gets a reference to the given []ProposalType and assigns it to the AdditionalProposalTypes field.
func (o *QuoteReq) SetAdditionalProposalTypes(v []ProposalType) {
	o.AdditionalProposalTypes = v
}

func (o QuoteReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pickupLocations"] = o.PickupLocations
	toSerialize["destinationLocations"] = o.DestinationLocations
	toSerialize["parcels"] = o.Parcels
	if !IsNil(o.Handling) {
		toSerialize["handling"] = o.Handling
	}
	if !IsNil(o.ProofOfDeliveryRequirement) {
		toSerialize["proofOfDeliveryRequirement"] = o.ProofOfDeliveryRequirement
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.OriginalOrderId) {
		toSerialize["originalOrderId"] = o.OriginalOrderId
	}
	if !IsNil(o.ExcludeCarriers) {
		toSerialize["excludeCarriers"] = o.ExcludeCarriers
	}
	if !IsNil(o.ExcludedVehicleTypes) {
		toSerialize["excludedVehicleTypes"] = o.ExcludedVehicleTypes
	}
	if !IsNil(o.AdditionalProposalTypes) {
		toSerialize["additionalProposalTypes"] = o.AdditionalProposalTypes
	}
	return toSerialize, nil
}

type NullableQuoteReq struct {
	value *QuoteReq
	isSet bool
}

func (v NullableQuoteReq) Get() *QuoteReq {
	return v.value
}

func (v *NullableQuoteReq) Set(val *QuoteReq) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteReq) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteReq(val *QuoteReq) *NullableQuoteReq {
	return &NullableQuoteReq{value: val, isSet: true}
}

func (v NullableQuoteReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


