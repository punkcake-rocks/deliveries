/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the LocationWithIdAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationWithIdAllOf{}

// LocationWithIdAllOf struct for LocationWithIdAllOf
type LocationWithIdAllOf struct {
	// The location ID
	Id string `json:"id"`
	// The customer ID to which this location belongs
	MerchantId string `json:"merchantId"`
}

// NewLocationWithIdAllOf instantiates a new LocationWithIdAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationWithIdAllOf(id string, merchantId string) *LocationWithIdAllOf {
	this := LocationWithIdAllOf{}
	this.Id = id
	this.MerchantId = merchantId
	return &this
}

// NewLocationWithIdAllOfWithDefaults instantiates a new LocationWithIdAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationWithIdAllOfWithDefaults() *LocationWithIdAllOf {
	this := LocationWithIdAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *LocationWithIdAllOf) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LocationWithIdAllOf) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LocationWithIdAllOf) SetId(v string) {
	o.Id = v
}

// GetMerchantId returns the MerchantId field value
func (o *LocationWithIdAllOf) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *LocationWithIdAllOf) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *LocationWithIdAllOf) SetMerchantId(v string) {
	o.MerchantId = v
}

func (o LocationWithIdAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationWithIdAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["merchantId"] = o.MerchantId
	return toSerialize, nil
}

type NullableLocationWithIdAllOf struct {
	value *LocationWithIdAllOf
	isSet bool
}

func (v NullableLocationWithIdAllOf) Get() *LocationWithIdAllOf {
	return v.value
}

func (v *NullableLocationWithIdAllOf) Set(val *LocationWithIdAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationWithIdAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationWithIdAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationWithIdAllOf(val *LocationWithIdAllOf) *NullableLocationWithIdAllOf {
	return &NullableLocationWithIdAllOf{value: val, isSet: true}
}

func (v NullableLocationWithIdAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationWithIdAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


