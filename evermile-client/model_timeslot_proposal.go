/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the TimeslotProposal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeslotProposal{}

// TimeslotProposal A proposal for a specific timeslot of the day
type TimeslotProposal struct {
	Label ProposalLabel `json:"label"`
	Proposal *Proposal `json:"proposal,omitempty"`
}

// NewTimeslotProposal instantiates a new TimeslotProposal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeslotProposal(label ProposalLabel) *TimeslotProposal {
	this := TimeslotProposal{}
	this.Label = label
	return &this
}

// NewTimeslotProposalWithDefaults instantiates a new TimeslotProposal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeslotProposalWithDefaults() *TimeslotProposal {
	this := TimeslotProposal{}
	return &this
}

// GetLabel returns the Label field value
func (o *TimeslotProposal) GetLabel() ProposalLabel {
	if o == nil {
		var ret ProposalLabel
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *TimeslotProposal) GetLabelOk() (*ProposalLabel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *TimeslotProposal) SetLabel(v ProposalLabel) {
	o.Label = v
}

// GetProposal returns the Proposal field value if set, zero value otherwise.
func (o *TimeslotProposal) GetProposal() Proposal {
	if o == nil || IsNil(o.Proposal) {
		var ret Proposal
		return ret
	}
	return *o.Proposal
}

// GetProposalOk returns a tuple with the Proposal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeslotProposal) GetProposalOk() (*Proposal, bool) {
	if o == nil || IsNil(o.Proposal) {
		return nil, false
	}
	return o.Proposal, true
}

// HasProposal returns a boolean if a field has been set.
func (o *TimeslotProposal) HasProposal() bool {
	if o != nil && !IsNil(o.Proposal) {
		return true
	}

	return false
}

// SetProposal gets a reference to the given Proposal and assigns it to the Proposal field.
func (o *TimeslotProposal) SetProposal(v Proposal) {
	o.Proposal = &v
}

func (o TimeslotProposal) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeslotProposal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	if !IsNil(o.Proposal) {
		toSerialize["proposal"] = o.Proposal
	}
	return toSerialize, nil
}

type NullableTimeslotProposal struct {
	value *TimeslotProposal
	isSet bool
}

func (v NullableTimeslotProposal) Get() *TimeslotProposal {
	return v.value
}

func (v *NullableTimeslotProposal) Set(val *TimeslotProposal) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeslotProposal) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeslotProposal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeslotProposal(val *TimeslotProposal) *NullableTimeslotProposal {
	return &NullableTimeslotProposal{value: val, isSet: true}
}

func (v NullableTimeslotProposal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeslotProposal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


