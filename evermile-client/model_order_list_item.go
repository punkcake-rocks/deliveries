/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the OrderListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderListItem{}

// OrderListItem An order item
type OrderListItem struct {
	// The order ID
	Id string `json:"id"`
	PickupWindow TimeWindow `json:"pickupWindow"`
	// The carrier name
	Carrier string `json:"carrier"`
	// The total number of items
	TotalItems int32 `json:"totalItems"`
	Value Price `json:"value"`
	Status OrderExtendedStatus `json:"status"`
	// The order original creation time in ISO8601 format
	CreationTime time.Time `json:"creationTime"`
	// The order last update time in ISO8601 format
	UpdatedTime *time.Time `json:"updatedTime,omitempty"`
	// The last time a label was printed in ISO8601 format
	LabelPrintTime *time.Time `json:"labelPrintTime,omitempty"`
	// The dropoff address
	DropoffAddress string `json:"dropoffAddress"`
	DropoffWindow *TimeWindow `json:"dropoffWindow,omitempty"`
	Customer Customer `json:"customer"`
	// The dropoff note
	Notes *string `json:"notes,omitempty"`
	// The aggregation ID
	AggregationId string `json:"aggregationId"`
	// The number of parcels in this order
	ParcelsCount int32 `json:"parcelsCount"`
	// An external order ID attached to this order
	ExternalOrderId string `json:"externalOrderId"`
	// The ID of the e-commerce store for this order (if exists)
	StoreId *string `json:"storeId,omitempty"`
	OrderTrackingInfo *OrderTrackingInfo `json:"orderTrackingInfo,omitempty"`
	HandoffType HandoffType `json:"handoffType"`
	HandoffInfo *HandoffInfo `json:"handoffInfo,omitempty"`
	// Whether credits were used to pay for this order
	UsedCredits bool `json:"usedCredits"`
	// Whether label is required
	LabelRequired bool `json:"labelRequired"`
}

// NewOrderListItem instantiates a new OrderListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderListItem(id string, pickupWindow TimeWindow, carrier string, totalItems int32, value Price, status OrderExtendedStatus, creationTime time.Time, dropoffAddress string, customer Customer, aggregationId string, parcelsCount int32, externalOrderId string, handoffType HandoffType, usedCredits bool, labelRequired bool) *OrderListItem {
	this := OrderListItem{}
	this.Id = id
	this.PickupWindow = pickupWindow
	this.Carrier = carrier
	this.TotalItems = totalItems
	this.Value = value
	this.Status = status
	this.CreationTime = creationTime
	this.DropoffAddress = dropoffAddress
	this.Customer = customer
	this.AggregationId = aggregationId
	this.ParcelsCount = parcelsCount
	this.ExternalOrderId = externalOrderId
	this.HandoffType = handoffType
	this.UsedCredits = usedCredits
	this.LabelRequired = labelRequired
	return &this
}

// NewOrderListItemWithDefaults instantiates a new OrderListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderListItemWithDefaults() *OrderListItem {
	this := OrderListItem{}
	return &this
}

// GetId returns the Id field value
func (o *OrderListItem) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrderListItem) SetId(v string) {
	o.Id = v
}

// GetPickupWindow returns the PickupWindow field value
func (o *OrderListItem) GetPickupWindow() TimeWindow {
	if o == nil {
		var ret TimeWindow
		return ret
	}

	return o.PickupWindow
}

// GetPickupWindowOk returns a tuple with the PickupWindow field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetPickupWindowOk() (*TimeWindow, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PickupWindow, true
}

// SetPickupWindow sets field value
func (o *OrderListItem) SetPickupWindow(v TimeWindow) {
	o.PickupWindow = v
}

// GetCarrier returns the Carrier field value
func (o *OrderListItem) GetCarrier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetCarrierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Carrier, true
}

// SetCarrier sets field value
func (o *OrderListItem) SetCarrier(v string) {
	o.Carrier = v
}

// GetTotalItems returns the TotalItems field value
func (o *OrderListItem) GetTotalItems() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetTotalItemsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalItems, true
}

// SetTotalItems sets field value
func (o *OrderListItem) SetTotalItems(v int32) {
	o.TotalItems = v
}

// GetValue returns the Value field value
func (o *OrderListItem) GetValue() Price {
	if o == nil {
		var ret Price
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetValueOk() (*Price, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *OrderListItem) SetValue(v Price) {
	o.Value = v
}

// GetStatus returns the Status field value
func (o *OrderListItem) GetStatus() OrderExtendedStatus {
	if o == nil {
		var ret OrderExtendedStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetStatusOk() (*OrderExtendedStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *OrderListItem) SetStatus(v OrderExtendedStatus) {
	o.Status = v
}

// GetCreationTime returns the CreationTime field value
func (o *OrderListItem) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *OrderListItem) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetUpdatedTime returns the UpdatedTime field value if set, zero value otherwise.
func (o *OrderListItem) GetUpdatedTime() time.Time {
	if o == nil || IsNil(o.UpdatedTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedTime
}

// GetUpdatedTimeOk returns a tuple with the UpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedTime) {
		return nil, false
	}
	return o.UpdatedTime, true
}

// HasUpdatedTime returns a boolean if a field has been set.
func (o *OrderListItem) HasUpdatedTime() bool {
	if o != nil && !IsNil(o.UpdatedTime) {
		return true
	}

	return false
}

// SetUpdatedTime gets a reference to the given time.Time and assigns it to the UpdatedTime field.
func (o *OrderListItem) SetUpdatedTime(v time.Time) {
	o.UpdatedTime = &v
}

// GetLabelPrintTime returns the LabelPrintTime field value if set, zero value otherwise.
func (o *OrderListItem) GetLabelPrintTime() time.Time {
	if o == nil || IsNil(o.LabelPrintTime) {
		var ret time.Time
		return ret
	}
	return *o.LabelPrintTime
}

// GetLabelPrintTimeOk returns a tuple with the LabelPrintTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetLabelPrintTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LabelPrintTime) {
		return nil, false
	}
	return o.LabelPrintTime, true
}

// HasLabelPrintTime returns a boolean if a field has been set.
func (o *OrderListItem) HasLabelPrintTime() bool {
	if o != nil && !IsNil(o.LabelPrintTime) {
		return true
	}

	return false
}

// SetLabelPrintTime gets a reference to the given time.Time and assigns it to the LabelPrintTime field.
func (o *OrderListItem) SetLabelPrintTime(v time.Time) {
	o.LabelPrintTime = &v
}

// GetDropoffAddress returns the DropoffAddress field value
func (o *OrderListItem) GetDropoffAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DropoffAddress
}

// GetDropoffAddressOk returns a tuple with the DropoffAddress field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetDropoffAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DropoffAddress, true
}

// SetDropoffAddress sets field value
func (o *OrderListItem) SetDropoffAddress(v string) {
	o.DropoffAddress = v
}

// GetDropoffWindow returns the DropoffWindow field value if set, zero value otherwise.
func (o *OrderListItem) GetDropoffWindow() TimeWindow {
	if o == nil || IsNil(o.DropoffWindow) {
		var ret TimeWindow
		return ret
	}
	return *o.DropoffWindow
}

// GetDropoffWindowOk returns a tuple with the DropoffWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetDropoffWindowOk() (*TimeWindow, bool) {
	if o == nil || IsNil(o.DropoffWindow) {
		return nil, false
	}
	return o.DropoffWindow, true
}

// HasDropoffWindow returns a boolean if a field has been set.
func (o *OrderListItem) HasDropoffWindow() bool {
	if o != nil && !IsNil(o.DropoffWindow) {
		return true
	}

	return false
}

// SetDropoffWindow gets a reference to the given TimeWindow and assigns it to the DropoffWindow field.
func (o *OrderListItem) SetDropoffWindow(v TimeWindow) {
	o.DropoffWindow = &v
}

// GetCustomer returns the Customer field value
func (o *OrderListItem) GetCustomer() Customer {
	if o == nil {
		var ret Customer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetCustomerOk() (*Customer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *OrderListItem) SetCustomer(v Customer) {
	o.Customer = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *OrderListItem) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *OrderListItem) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *OrderListItem) SetNotes(v string) {
	o.Notes = &v
}

// GetAggregationId returns the AggregationId field value
func (o *OrderListItem) GetAggregationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AggregationId
}

// GetAggregationIdOk returns a tuple with the AggregationId field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetAggregationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationId, true
}

// SetAggregationId sets field value
func (o *OrderListItem) SetAggregationId(v string) {
	o.AggregationId = v
}

// GetParcelsCount returns the ParcelsCount field value
func (o *OrderListItem) GetParcelsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ParcelsCount
}

// GetParcelsCountOk returns a tuple with the ParcelsCount field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetParcelsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParcelsCount, true
}

// SetParcelsCount sets field value
func (o *OrderListItem) SetParcelsCount(v int32) {
	o.ParcelsCount = v
}

// GetExternalOrderId returns the ExternalOrderId field value
func (o *OrderListItem) GetExternalOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalOrderId
}

// GetExternalOrderIdOk returns a tuple with the ExternalOrderId field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetExternalOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalOrderId, true
}

// SetExternalOrderId sets field value
func (o *OrderListItem) SetExternalOrderId(v string) {
	o.ExternalOrderId = v
}

// GetStoreId returns the StoreId field value if set, zero value otherwise.
func (o *OrderListItem) GetStoreId() string {
	if o == nil || IsNil(o.StoreId) {
		var ret string
		return ret
	}
	return *o.StoreId
}

// GetStoreIdOk returns a tuple with the StoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetStoreIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoreId) {
		return nil, false
	}
	return o.StoreId, true
}

// HasStoreId returns a boolean if a field has been set.
func (o *OrderListItem) HasStoreId() bool {
	if o != nil && !IsNil(o.StoreId) {
		return true
	}

	return false
}

// SetStoreId gets a reference to the given string and assigns it to the StoreId field.
func (o *OrderListItem) SetStoreId(v string) {
	o.StoreId = &v
}

// GetOrderTrackingInfo returns the OrderTrackingInfo field value if set, zero value otherwise.
func (o *OrderListItem) GetOrderTrackingInfo() OrderTrackingInfo {
	if o == nil || IsNil(o.OrderTrackingInfo) {
		var ret OrderTrackingInfo
		return ret
	}
	return *o.OrderTrackingInfo
}

// GetOrderTrackingInfoOk returns a tuple with the OrderTrackingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetOrderTrackingInfoOk() (*OrderTrackingInfo, bool) {
	if o == nil || IsNil(o.OrderTrackingInfo) {
		return nil, false
	}
	return o.OrderTrackingInfo, true
}

// HasOrderTrackingInfo returns a boolean if a field has been set.
func (o *OrderListItem) HasOrderTrackingInfo() bool {
	if o != nil && !IsNil(o.OrderTrackingInfo) {
		return true
	}

	return false
}

// SetOrderTrackingInfo gets a reference to the given OrderTrackingInfo and assigns it to the OrderTrackingInfo field.
func (o *OrderListItem) SetOrderTrackingInfo(v OrderTrackingInfo) {
	o.OrderTrackingInfo = &v
}

// GetHandoffType returns the HandoffType field value
func (o *OrderListItem) GetHandoffType() HandoffType {
	if o == nil {
		var ret HandoffType
		return ret
	}

	return o.HandoffType
}

// GetHandoffTypeOk returns a tuple with the HandoffType field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetHandoffTypeOk() (*HandoffType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HandoffType, true
}

// SetHandoffType sets field value
func (o *OrderListItem) SetHandoffType(v HandoffType) {
	o.HandoffType = v
}

// GetHandoffInfo returns the HandoffInfo field value if set, zero value otherwise.
func (o *OrderListItem) GetHandoffInfo() HandoffInfo {
	if o == nil || IsNil(o.HandoffInfo) {
		var ret HandoffInfo
		return ret
	}
	return *o.HandoffInfo
}

// GetHandoffInfoOk returns a tuple with the HandoffInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetHandoffInfoOk() (*HandoffInfo, bool) {
	if o == nil || IsNil(o.HandoffInfo) {
		return nil, false
	}
	return o.HandoffInfo, true
}

// HasHandoffInfo returns a boolean if a field has been set.
func (o *OrderListItem) HasHandoffInfo() bool {
	if o != nil && !IsNil(o.HandoffInfo) {
		return true
	}

	return false
}

// SetHandoffInfo gets a reference to the given HandoffInfo and assigns it to the HandoffInfo field.
func (o *OrderListItem) SetHandoffInfo(v HandoffInfo) {
	o.HandoffInfo = &v
}

// GetUsedCredits returns the UsedCredits field value
func (o *OrderListItem) GetUsedCredits() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UsedCredits
}

// GetUsedCreditsOk returns a tuple with the UsedCredits field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetUsedCreditsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsedCredits, true
}

// SetUsedCredits sets field value
func (o *OrderListItem) SetUsedCredits(v bool) {
	o.UsedCredits = v
}

// GetLabelRequired returns the LabelRequired field value
func (o *OrderListItem) GetLabelRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LabelRequired
}

// GetLabelRequiredOk returns a tuple with the LabelRequired field value
// and a boolean to check if the value has been set.
func (o *OrderListItem) GetLabelRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelRequired, true
}

// SetLabelRequired sets field value
func (o *OrderListItem) SetLabelRequired(v bool) {
	o.LabelRequired = v
}

func (o OrderListItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["pickupWindow"] = o.PickupWindow
	toSerialize["carrier"] = o.Carrier
	toSerialize["totalItems"] = o.TotalItems
	toSerialize["value"] = o.Value
	toSerialize["status"] = o.Status
	toSerialize["creationTime"] = o.CreationTime
	if !IsNil(o.UpdatedTime) {
		toSerialize["updatedTime"] = o.UpdatedTime
	}
	if !IsNil(o.LabelPrintTime) {
		toSerialize["labelPrintTime"] = o.LabelPrintTime
	}
	toSerialize["dropoffAddress"] = o.DropoffAddress
	if !IsNil(o.DropoffWindow) {
		toSerialize["dropoffWindow"] = o.DropoffWindow
	}
	toSerialize["customer"] = o.Customer
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	toSerialize["aggregationId"] = o.AggregationId
	toSerialize["parcelsCount"] = o.ParcelsCount
	toSerialize["externalOrderId"] = o.ExternalOrderId
	if !IsNil(o.StoreId) {
		toSerialize["storeId"] = o.StoreId
	}
	if !IsNil(o.OrderTrackingInfo) {
		toSerialize["orderTrackingInfo"] = o.OrderTrackingInfo
	}
	toSerialize["handoffType"] = o.HandoffType
	if !IsNil(o.HandoffInfo) {
		toSerialize["handoffInfo"] = o.HandoffInfo
	}
	toSerialize["usedCredits"] = o.UsedCredits
	toSerialize["labelRequired"] = o.LabelRequired
	return toSerialize, nil
}

type NullableOrderListItem struct {
	value *OrderListItem
	isSet bool
}

func (v NullableOrderListItem) Get() *OrderListItem {
	return v.value
}

func (v *NullableOrderListItem) Set(val *OrderListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderListItem(val *OrderListItem) *NullableOrderListItem {
	return &NullableOrderListItem{value: val, isSet: true}
}

func (v NullableOrderListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


