/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the DeliveryLiveUpdateCallbackResp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryLiveUpdateCallbackResp{}

// DeliveryLiveUpdateCallbackResp struct for DeliveryLiveUpdateCallbackResp
type DeliveryLiveUpdateCallbackResp struct {
	// The time this callback was sent in ISO8601 format
	Timestamp time.Time `json:"timestamp"`
	// The ID of the order
	OrderId string `json:"orderId"`
	// The expected delivery time
	Eta *time.Time `json:"eta,omitempty"`
	CourierLocation *GeoLocation `json:"courierLocation,omitempty"`
}

// NewDeliveryLiveUpdateCallbackResp instantiates a new DeliveryLiveUpdateCallbackResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryLiveUpdateCallbackResp(timestamp time.Time, orderId string) *DeliveryLiveUpdateCallbackResp {
	this := DeliveryLiveUpdateCallbackResp{}
	this.Timestamp = timestamp
	this.OrderId = orderId
	return &this
}

// NewDeliveryLiveUpdateCallbackRespWithDefaults instantiates a new DeliveryLiveUpdateCallbackResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryLiveUpdateCallbackRespWithDefaults() *DeliveryLiveUpdateCallbackResp {
	this := DeliveryLiveUpdateCallbackResp{}
	return &this
}

// GetTimestamp returns the Timestamp field value
func (o *DeliveryLiveUpdateCallbackResp) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *DeliveryLiveUpdateCallbackResp) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *DeliveryLiveUpdateCallbackResp) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetOrderId returns the OrderId field value
func (o *DeliveryLiveUpdateCallbackResp) GetOrderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *DeliveryLiveUpdateCallbackResp) GetOrderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *DeliveryLiveUpdateCallbackResp) SetOrderId(v string) {
	o.OrderId = v
}

// GetEta returns the Eta field value if set, zero value otherwise.
func (o *DeliveryLiveUpdateCallbackResp) GetEta() time.Time {
	if o == nil || IsNil(o.Eta) {
		var ret time.Time
		return ret
	}
	return *o.Eta
}

// GetEtaOk returns a tuple with the Eta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryLiveUpdateCallbackResp) GetEtaOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Eta) {
		return nil, false
	}
	return o.Eta, true
}

// HasEta returns a boolean if a field has been set.
func (o *DeliveryLiveUpdateCallbackResp) HasEta() bool {
	if o != nil && !IsNil(o.Eta) {
		return true
	}

	return false
}

// SetEta gets a reference to the given time.Time and assigns it to the Eta field.
func (o *DeliveryLiveUpdateCallbackResp) SetEta(v time.Time) {
	o.Eta = &v
}

// GetCourierLocation returns the CourierLocation field value if set, zero value otherwise.
func (o *DeliveryLiveUpdateCallbackResp) GetCourierLocation() GeoLocation {
	if o == nil || IsNil(o.CourierLocation) {
		var ret GeoLocation
		return ret
	}
	return *o.CourierLocation
}

// GetCourierLocationOk returns a tuple with the CourierLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeliveryLiveUpdateCallbackResp) GetCourierLocationOk() (*GeoLocation, bool) {
	if o == nil || IsNil(o.CourierLocation) {
		return nil, false
	}
	return o.CourierLocation, true
}

// HasCourierLocation returns a boolean if a field has been set.
func (o *DeliveryLiveUpdateCallbackResp) HasCourierLocation() bool {
	if o != nil && !IsNil(o.CourierLocation) {
		return true
	}

	return false
}

// SetCourierLocation gets a reference to the given GeoLocation and assigns it to the CourierLocation field.
func (o *DeliveryLiveUpdateCallbackResp) SetCourierLocation(v GeoLocation) {
	o.CourierLocation = &v
}

func (o DeliveryLiveUpdateCallbackResp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryLiveUpdateCallbackResp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["orderId"] = o.OrderId
	if !IsNil(o.Eta) {
		toSerialize["eta"] = o.Eta
	}
	if !IsNil(o.CourierLocation) {
		toSerialize["courierLocation"] = o.CourierLocation
	}
	return toSerialize, nil
}

type NullableDeliveryLiveUpdateCallbackResp struct {
	value *DeliveryLiveUpdateCallbackResp
	isSet bool
}

func (v NullableDeliveryLiveUpdateCallbackResp) Get() *DeliveryLiveUpdateCallbackResp {
	return v.value
}

func (v *NullableDeliveryLiveUpdateCallbackResp) Set(val *DeliveryLiveUpdateCallbackResp) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryLiveUpdateCallbackResp) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryLiveUpdateCallbackResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryLiveUpdateCallbackResp(val *DeliveryLiveUpdateCallbackResp) *NullableDeliveryLiveUpdateCallbackResp {
	return &NullableDeliveryLiveUpdateCallbackResp{value: val, isSet: true}
}

func (v NullableDeliveryLiveUpdateCallbackResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryLiveUpdateCallbackResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


