/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the Webhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Webhook{}

// Webhook Details for a registered webhook
type Webhook struct {
	// The Evermile ID for this webhook
	Id string `json:"id"`
	Topic WebhookTopic `json:"topic"`
	// The registered webhook URL.
	Url string `json:"url"`
	// <u>The webhook status</u>: <br> <table>   <tr><td>enabled</td>     <td>The webhook is active</td></tr>   <tr><td>disabled</td>    <td>The webhook is disabled (due to too many delivery failures</td></tr> </table> 
	Status string `json:"status"`
	// The last time the webhook call was successful, in ISO8601 format
	LastSuccess *time.Time `json:"lastSuccess,omitempty"`
	// The number of failures in calling the webhook since the last success
	FailuresSinceLastSuccess int32 `json:"failuresSinceLastSuccess"`
	// The header to use for sending a secret string authenticating a webhook call
	AuthHeader string `json:"authHeader"`
	// The key to set in the header
	AuthHeaderKey string `json:"authHeaderKey"`
}

// NewWebhook instantiates a new Webhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhook(id string, topic WebhookTopic, url string, status string, failuresSinceLastSuccess int32, authHeader string, authHeaderKey string) *Webhook {
	this := Webhook{}
	this.Id = id
	this.Topic = topic
	this.Url = url
	this.Status = status
	this.FailuresSinceLastSuccess = failuresSinceLastSuccess
	this.AuthHeader = authHeader
	this.AuthHeaderKey = authHeaderKey
	return &this
}

// NewWebhookWithDefaults instantiates a new Webhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookWithDefaults() *Webhook {
	this := Webhook{}
	return &this
}

// GetId returns the Id field value
func (o *Webhook) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Webhook) SetId(v string) {
	o.Id = v
}

// GetTopic returns the Topic field value
func (o *Webhook) GetTopic() WebhookTopic {
	if o == nil {
		var ret WebhookTopic
		return ret
	}

	return o.Topic
}

// GetTopicOk returns a tuple with the Topic field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetTopicOk() (*WebhookTopic, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Topic, true
}

// SetTopic sets field value
func (o *Webhook) SetTopic(v WebhookTopic) {
	o.Topic = v
}

// GetUrl returns the Url field value
func (o *Webhook) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Webhook) SetUrl(v string) {
	o.Url = v
}

// GetStatus returns the Status field value
func (o *Webhook) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Webhook) SetStatus(v string) {
	o.Status = v
}

// GetLastSuccess returns the LastSuccess field value if set, zero value otherwise.
func (o *Webhook) GetLastSuccess() time.Time {
	if o == nil || IsNil(o.LastSuccess) {
		var ret time.Time
		return ret
	}
	return *o.LastSuccess
}

// GetLastSuccessOk returns a tuple with the LastSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Webhook) GetLastSuccessOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastSuccess) {
		return nil, false
	}
	return o.LastSuccess, true
}

// HasLastSuccess returns a boolean if a field has been set.
func (o *Webhook) HasLastSuccess() bool {
	if o != nil && !IsNil(o.LastSuccess) {
		return true
	}

	return false
}

// SetLastSuccess gets a reference to the given time.Time and assigns it to the LastSuccess field.
func (o *Webhook) SetLastSuccess(v time.Time) {
	o.LastSuccess = &v
}

// GetFailuresSinceLastSuccess returns the FailuresSinceLastSuccess field value
func (o *Webhook) GetFailuresSinceLastSuccess() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailuresSinceLastSuccess
}

// GetFailuresSinceLastSuccessOk returns a tuple with the FailuresSinceLastSuccess field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetFailuresSinceLastSuccessOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailuresSinceLastSuccess, true
}

// SetFailuresSinceLastSuccess sets field value
func (o *Webhook) SetFailuresSinceLastSuccess(v int32) {
	o.FailuresSinceLastSuccess = v
}

// GetAuthHeader returns the AuthHeader field value
func (o *Webhook) GetAuthHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthHeader
}

// GetAuthHeaderOk returns a tuple with the AuthHeader field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetAuthHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthHeader, true
}

// SetAuthHeader sets field value
func (o *Webhook) SetAuthHeader(v string) {
	o.AuthHeader = v
}

// GetAuthHeaderKey returns the AuthHeaderKey field value
func (o *Webhook) GetAuthHeaderKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthHeaderKey
}

// GetAuthHeaderKeyOk returns a tuple with the AuthHeaderKey field value
// and a boolean to check if the value has been set.
func (o *Webhook) GetAuthHeaderKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthHeaderKey, true
}

// SetAuthHeaderKey sets field value
func (o *Webhook) SetAuthHeaderKey(v string) {
	o.AuthHeaderKey = v
}

func (o Webhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Webhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["topic"] = o.Topic
	toSerialize["url"] = o.Url
	toSerialize["status"] = o.Status
	if !IsNil(o.LastSuccess) {
		toSerialize["lastSuccess"] = o.LastSuccess
	}
	toSerialize["failuresSinceLastSuccess"] = o.FailuresSinceLastSuccess
	toSerialize["authHeader"] = o.AuthHeader
	toSerialize["authHeaderKey"] = o.AuthHeaderKey
	return toSerialize, nil
}

type NullableWebhook struct {
	value *Webhook
	isSet bool
}

func (v NullableWebhook) Get() *Webhook {
	return v.value
}

func (v *NullableWebhook) Set(val *Webhook) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhook(val *Webhook) *NullableWebhook {
	return &NullableWebhook{value: val, isSet: true}
}

func (v NullableWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


