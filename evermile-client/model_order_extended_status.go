/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the OrderExtendedStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderExtendedStatus{}

// OrderExtendedStatus An order status with reporting information
type OrderExtendedStatus struct {
	OrderStatus OrderStatus `json:"orderStatus"`
	// Who reported this status
	Reporter string `json:"reporter"`
	// The reporting time in ISO8601 format
	ReportingTime time.Time `json:"reporting_time"`
	// True if the status was manually changed by the reporter
	ManuallyUpdated bool `json:"manuallyUpdated"`
}

// NewOrderExtendedStatus instantiates a new OrderExtendedStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderExtendedStatus(orderStatus OrderStatus, reporter string, reportingTime time.Time, manuallyUpdated bool) *OrderExtendedStatus {
	this := OrderExtendedStatus{}
	this.OrderStatus = orderStatus
	this.Reporter = reporter
	this.ReportingTime = reportingTime
	this.ManuallyUpdated = manuallyUpdated
	return &this
}

// NewOrderExtendedStatusWithDefaults instantiates a new OrderExtendedStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderExtendedStatusWithDefaults() *OrderExtendedStatus {
	this := OrderExtendedStatus{}
	return &this
}

// GetOrderStatus returns the OrderStatus field value
func (o *OrderExtendedStatus) GetOrderStatus() OrderStatus {
	if o == nil {
		var ret OrderStatus
		return ret
	}

	return o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value
// and a boolean to check if the value has been set.
func (o *OrderExtendedStatus) GetOrderStatusOk() (*OrderStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderStatus, true
}

// SetOrderStatus sets field value
func (o *OrderExtendedStatus) SetOrderStatus(v OrderStatus) {
	o.OrderStatus = v
}

// GetReporter returns the Reporter field value
func (o *OrderExtendedStatus) GetReporter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reporter
}

// GetReporterOk returns a tuple with the Reporter field value
// and a boolean to check if the value has been set.
func (o *OrderExtendedStatus) GetReporterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reporter, true
}

// SetReporter sets field value
func (o *OrderExtendedStatus) SetReporter(v string) {
	o.Reporter = v
}

// GetReportingTime returns the ReportingTime field value
func (o *OrderExtendedStatus) GetReportingTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ReportingTime
}

// GetReportingTimeOk returns a tuple with the ReportingTime field value
// and a boolean to check if the value has been set.
func (o *OrderExtendedStatus) GetReportingTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportingTime, true
}

// SetReportingTime sets field value
func (o *OrderExtendedStatus) SetReportingTime(v time.Time) {
	o.ReportingTime = v
}

// GetManuallyUpdated returns the ManuallyUpdated field value
func (o *OrderExtendedStatus) GetManuallyUpdated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ManuallyUpdated
}

// GetManuallyUpdatedOk returns a tuple with the ManuallyUpdated field value
// and a boolean to check if the value has been set.
func (o *OrderExtendedStatus) GetManuallyUpdatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManuallyUpdated, true
}

// SetManuallyUpdated sets field value
func (o *OrderExtendedStatus) SetManuallyUpdated(v bool) {
	o.ManuallyUpdated = v
}

func (o OrderExtendedStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderExtendedStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orderStatus"] = o.OrderStatus
	toSerialize["reporter"] = o.Reporter
	toSerialize["reporting_time"] = o.ReportingTime
	toSerialize["manuallyUpdated"] = o.ManuallyUpdated
	return toSerialize, nil
}

type NullableOrderExtendedStatus struct {
	value *OrderExtendedStatus
	isSet bool
}

func (v NullableOrderExtendedStatus) Get() *OrderExtendedStatus {
	return v.value
}

func (v *NullableOrderExtendedStatus) Set(val *OrderExtendedStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderExtendedStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderExtendedStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderExtendedStatus(val *OrderExtendedStatus) *NullableOrderExtendedStatus {
	return &NullableOrderExtendedStatus{value: val, isSet: true}
}

func (v NullableOrderExtendedStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderExtendedStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


