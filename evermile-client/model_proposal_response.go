/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the ProposalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProposalResponse{}

// ProposalResponse Proposals response for a proposal retrieval request
type ProposalResponse struct {
	Proposal Proposal `json:"proposal"`
	// Proposals are valid until this time in ISO8601 format
	ValidUntil time.Time `json:"validUntil"`
}

// NewProposalResponse instantiates a new ProposalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProposalResponse(proposal Proposal, validUntil time.Time) *ProposalResponse {
	this := ProposalResponse{}
	this.Proposal = proposal
	this.ValidUntil = validUntil
	return &this
}

// NewProposalResponseWithDefaults instantiates a new ProposalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProposalResponseWithDefaults() *ProposalResponse {
	this := ProposalResponse{}
	return &this
}

// GetProposal returns the Proposal field value
func (o *ProposalResponse) GetProposal() Proposal {
	if o == nil {
		var ret Proposal
		return ret
	}

	return o.Proposal
}

// GetProposalOk returns a tuple with the Proposal field value
// and a boolean to check if the value has been set.
func (o *ProposalResponse) GetProposalOk() (*Proposal, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Proposal, true
}

// SetProposal sets field value
func (o *ProposalResponse) SetProposal(v Proposal) {
	o.Proposal = v
}

// GetValidUntil returns the ValidUntil field value
func (o *ProposalResponse) GetValidUntil() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *ProposalResponse) GetValidUntilOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *ProposalResponse) SetValidUntil(v time.Time) {
	o.ValidUntil = v
}

func (o ProposalResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProposalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["proposal"] = o.Proposal
	toSerialize["validUntil"] = o.ValidUntil
	return toSerialize, nil
}

type NullableProposalResponse struct {
	value *ProposalResponse
	isSet bool
}

func (v NullableProposalResponse) Get() *ProposalResponse {
	return v.value
}

func (v *NullableProposalResponse) Set(val *ProposalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProposalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProposalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProposalResponse(val *ProposalResponse) *NullableProposalResponse {
	return &NullableProposalResponse{value: val, isSet: true}
}

func (v NullableProposalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProposalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


