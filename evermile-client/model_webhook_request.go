/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the WebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookRequest{}

// WebhookRequest A request for creating a webhook
type WebhookRequest struct {
	Topic *WebhookTopic `json:"topic,omitempty"`
	// The URL to send the webhook to. Must be an **https** endpoint
	Url string `json:"url"`
	// A header to use for sending a secret string authenticating a webhook call
	AuthHeader string `json:"authHeader"`
	// The key to set in the header
	AuthHeaderKey string `json:"authHeaderKey"`
}

// NewWebhookRequest instantiates a new WebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookRequest(url string, authHeader string, authHeaderKey string) *WebhookRequest {
	this := WebhookRequest{}
	this.Url = url
	this.AuthHeader = authHeader
	this.AuthHeaderKey = authHeaderKey
	return &this
}

// NewWebhookRequestWithDefaults instantiates a new WebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookRequestWithDefaults() *WebhookRequest {
	this := WebhookRequest{}
	return &this
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *WebhookRequest) GetTopic() WebhookTopic {
	if o == nil || IsNil(o.Topic) {
		var ret WebhookTopic
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetTopicOk() (*WebhookTopic, bool) {
	if o == nil || IsNil(o.Topic) {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *WebhookRequest) HasTopic() bool {
	if o != nil && !IsNil(o.Topic) {
		return true
	}

	return false
}

// SetTopic gets a reference to the given WebhookTopic and assigns it to the Topic field.
func (o *WebhookRequest) SetTopic(v WebhookTopic) {
	o.Topic = &v
}

// GetUrl returns the Url field value
func (o *WebhookRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookRequest) SetUrl(v string) {
	o.Url = v
}

// GetAuthHeader returns the AuthHeader field value
func (o *WebhookRequest) GetAuthHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthHeader
}

// GetAuthHeaderOk returns a tuple with the AuthHeader field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetAuthHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthHeader, true
}

// SetAuthHeader sets field value
func (o *WebhookRequest) SetAuthHeader(v string) {
	o.AuthHeader = v
}

// GetAuthHeaderKey returns the AuthHeaderKey field value
func (o *WebhookRequest) GetAuthHeaderKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthHeaderKey
}

// GetAuthHeaderKeyOk returns a tuple with the AuthHeaderKey field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetAuthHeaderKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthHeaderKey, true
}

// SetAuthHeaderKey sets field value
func (o *WebhookRequest) SetAuthHeaderKey(v string) {
	o.AuthHeaderKey = v
}

func (o WebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Topic) {
		toSerialize["topic"] = o.Topic
	}
	toSerialize["url"] = o.Url
	toSerialize["authHeader"] = o.AuthHeader
	toSerialize["authHeaderKey"] = o.AuthHeaderKey
	return toSerialize, nil
}

type NullableWebhookRequest struct {
	value *WebhookRequest
	isSet bool
}

func (v NullableWebhookRequest) Get() *WebhookRequest {
	return v.value
}

func (v *NullableWebhookRequest) Set(val *WebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookRequest(val *WebhookRequest) *NullableWebhookRequest {
	return &NullableWebhookRequest{value: val, isSet: true}
}

func (v NullableWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


