/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the Dimensions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dimensions{}

// Dimensions A parcel's dimension
type Dimensions struct {
	// The name of this set of dimensions
	Name *string `json:"name,omitempty"`
	// Length of the parcel in centimeters
	LengthCm float32 `json:"lengthCm"`
	// Width of the parcel in centimeters
	WidthCm float32 `json:"widthCm"`
	// Height of the parcel in centimeters
	HeightCm float32 `json:"heightCm"`
}

// NewDimensions instantiates a new Dimensions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDimensions(lengthCm float32, widthCm float32, heightCm float32) *Dimensions {
	this := Dimensions{}
	this.LengthCm = lengthCm
	this.WidthCm = widthCm
	this.HeightCm = heightCm
	return &this
}

// NewDimensionsWithDefaults instantiates a new Dimensions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDimensionsWithDefaults() *Dimensions {
	this := Dimensions{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Dimensions) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dimensions) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Dimensions) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Dimensions) SetName(v string) {
	o.Name = &v
}

// GetLengthCm returns the LengthCm field value
func (o *Dimensions) GetLengthCm() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LengthCm
}

// GetLengthCmOk returns a tuple with the LengthCm field value
// and a boolean to check if the value has been set.
func (o *Dimensions) GetLengthCmOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LengthCm, true
}

// SetLengthCm sets field value
func (o *Dimensions) SetLengthCm(v float32) {
	o.LengthCm = v
}

// GetWidthCm returns the WidthCm field value
func (o *Dimensions) GetWidthCm() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WidthCm
}

// GetWidthCmOk returns a tuple with the WidthCm field value
// and a boolean to check if the value has been set.
func (o *Dimensions) GetWidthCmOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WidthCm, true
}

// SetWidthCm sets field value
func (o *Dimensions) SetWidthCm(v float32) {
	o.WidthCm = v
}

// GetHeightCm returns the HeightCm field value
func (o *Dimensions) GetHeightCm() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.HeightCm
}

// GetHeightCmOk returns a tuple with the HeightCm field value
// and a boolean to check if the value has been set.
func (o *Dimensions) GetHeightCmOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeightCm, true
}

// SetHeightCm sets field value
func (o *Dimensions) SetHeightCm(v float32) {
	o.HeightCm = v
}

func (o Dimensions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dimensions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["lengthCm"] = o.LengthCm
	toSerialize["widthCm"] = o.WidthCm
	toSerialize["heightCm"] = o.HeightCm
	return toSerialize, nil
}

type NullableDimensions struct {
	value *Dimensions
	isSet bool
}

func (v NullableDimensions) Get() *Dimensions {
	return v.value
}

func (v *NullableDimensions) Set(val *Dimensions) {
	v.value = val
	v.isSet = true
}

func (v NullableDimensions) IsSet() bool {
	return v.isSet
}

func (v *NullableDimensions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDimensions(val *Dimensions) *NullableDimensions {
	return &NullableDimensions{value: val, isSet: true}
}

func (v NullableDimensions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDimensions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


