/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
	"time"
)

// checks if the QuoteResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuoteResponse{}

// QuoteResponse Proposals response for a quote request
type QuoteResponse struct {
	// An array (map) of proposals by date
	DateProposals []DateProposals `json:"dateProposals"`
	// An array (map) of proposals by date
	ExpressProposals []TimeslotProposal `json:"expressProposals"`
	// Proposals are valid until this time in ISO8601 format
	ValidUntil time.Time `json:"validUntil"`
	CurrentPrice *Price `json:"currentPrice,omitempty"`
	CancellationFee *Price `json:"cancellationFee,omitempty"`
	// A token that should be returned in order to confirm the cancellation of the original order. To confirm the cancellation, pass this in an X-EVERMILE-TOKEN header to createOrder.
	CancellationToken *string `json:"cancellationToken,omitempty"`
}

// NewQuoteResponse instantiates a new QuoteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuoteResponse(dateProposals []DateProposals, expressProposals []TimeslotProposal, validUntil time.Time) *QuoteResponse {
	this := QuoteResponse{}
	this.DateProposals = dateProposals
	this.ExpressProposals = expressProposals
	this.ValidUntil = validUntil
	return &this
}

// NewQuoteResponseWithDefaults instantiates a new QuoteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuoteResponseWithDefaults() *QuoteResponse {
	this := QuoteResponse{}
	return &this
}

// GetDateProposals returns the DateProposals field value
func (o *QuoteResponse) GetDateProposals() []DateProposals {
	if o == nil {
		var ret []DateProposals
		return ret
	}

	return o.DateProposals
}

// GetDateProposalsOk returns a tuple with the DateProposals field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetDateProposalsOk() ([]DateProposals, bool) {
	if o == nil {
		return nil, false
	}
	return o.DateProposals, true
}

// SetDateProposals sets field value
func (o *QuoteResponse) SetDateProposals(v []DateProposals) {
	o.DateProposals = v
}

// GetExpressProposals returns the ExpressProposals field value
func (o *QuoteResponse) GetExpressProposals() []TimeslotProposal {
	if o == nil {
		var ret []TimeslotProposal
		return ret
	}

	return o.ExpressProposals
}

// GetExpressProposalsOk returns a tuple with the ExpressProposals field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetExpressProposalsOk() ([]TimeslotProposal, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpressProposals, true
}

// SetExpressProposals sets field value
func (o *QuoteResponse) SetExpressProposals(v []TimeslotProposal) {
	o.ExpressProposals = v
}

// GetValidUntil returns the ValidUntil field value
func (o *QuoteResponse) GetValidUntil() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValidUntil
}

// GetValidUntilOk returns a tuple with the ValidUntil field value
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetValidUntilOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidUntil, true
}

// SetValidUntil sets field value
func (o *QuoteResponse) SetValidUntil(v time.Time) {
	o.ValidUntil = v
}

// GetCurrentPrice returns the CurrentPrice field value if set, zero value otherwise.
func (o *QuoteResponse) GetCurrentPrice() Price {
	if o == nil || IsNil(o.CurrentPrice) {
		var ret Price
		return ret
	}
	return *o.CurrentPrice
}

// GetCurrentPriceOk returns a tuple with the CurrentPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetCurrentPriceOk() (*Price, bool) {
	if o == nil || IsNil(o.CurrentPrice) {
		return nil, false
	}
	return o.CurrentPrice, true
}

// HasCurrentPrice returns a boolean if a field has been set.
func (o *QuoteResponse) HasCurrentPrice() bool {
	if o != nil && !IsNil(o.CurrentPrice) {
		return true
	}

	return false
}

// SetCurrentPrice gets a reference to the given Price and assigns it to the CurrentPrice field.
func (o *QuoteResponse) SetCurrentPrice(v Price) {
	o.CurrentPrice = &v
}

// GetCancellationFee returns the CancellationFee field value if set, zero value otherwise.
func (o *QuoteResponse) GetCancellationFee() Price {
	if o == nil || IsNil(o.CancellationFee) {
		var ret Price
		return ret
	}
	return *o.CancellationFee
}

// GetCancellationFeeOk returns a tuple with the CancellationFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetCancellationFeeOk() (*Price, bool) {
	if o == nil || IsNil(o.CancellationFee) {
		return nil, false
	}
	return o.CancellationFee, true
}

// HasCancellationFee returns a boolean if a field has been set.
func (o *QuoteResponse) HasCancellationFee() bool {
	if o != nil && !IsNil(o.CancellationFee) {
		return true
	}

	return false
}

// SetCancellationFee gets a reference to the given Price and assigns it to the CancellationFee field.
func (o *QuoteResponse) SetCancellationFee(v Price) {
	o.CancellationFee = &v
}

// GetCancellationToken returns the CancellationToken field value if set, zero value otherwise.
func (o *QuoteResponse) GetCancellationToken() string {
	if o == nil || IsNil(o.CancellationToken) {
		var ret string
		return ret
	}
	return *o.CancellationToken
}

// GetCancellationTokenOk returns a tuple with the CancellationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuoteResponse) GetCancellationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.CancellationToken) {
		return nil, false
	}
	return o.CancellationToken, true
}

// HasCancellationToken returns a boolean if a field has been set.
func (o *QuoteResponse) HasCancellationToken() bool {
	if o != nil && !IsNil(o.CancellationToken) {
		return true
	}

	return false
}

// SetCancellationToken gets a reference to the given string and assigns it to the CancellationToken field.
func (o *QuoteResponse) SetCancellationToken(v string) {
	o.CancellationToken = &v
}

func (o QuoteResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuoteResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dateProposals"] = o.DateProposals
	toSerialize["expressProposals"] = o.ExpressProposals
	toSerialize["validUntil"] = o.ValidUntil
	if !IsNil(o.CurrentPrice) {
		toSerialize["currentPrice"] = o.CurrentPrice
	}
	if !IsNil(o.CancellationFee) {
		toSerialize["cancellationFee"] = o.CancellationFee
	}
	if !IsNil(o.CancellationToken) {
		toSerialize["cancellationToken"] = o.CancellationToken
	}
	return toSerialize, nil
}

type NullableQuoteResponse struct {
	value *QuoteResponse
	isSet bool
}

func (v NullableQuoteResponse) Get() *QuoteResponse {
	return v.value
}

func (v *NullableQuoteResponse) Set(val *QuoteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuoteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuoteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuoteResponse(val *QuoteResponse) *NullableQuoteResponse {
	return &NullableQuoteResponse{value: val, isSet: true}
}

func (v NullableQuoteResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuoteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


