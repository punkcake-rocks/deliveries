/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the LocationsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationsResponse{}

// LocationsResponse Response for a locations request
type LocationsResponse struct {
	Locations []LocationWithId `json:"locations"`
}

// NewLocationsResponse instantiates a new LocationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationsResponse(locations []LocationWithId) *LocationsResponse {
	this := LocationsResponse{}
	this.Locations = locations
	return &this
}

// NewLocationsResponseWithDefaults instantiates a new LocationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationsResponseWithDefaults() *LocationsResponse {
	this := LocationsResponse{}
	return &this
}

// GetLocations returns the Locations field value
func (o *LocationsResponse) GetLocations() []LocationWithId {
	if o == nil {
		var ret []LocationWithId
		return ret
	}

	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value
// and a boolean to check if the value has been set.
func (o *LocationsResponse) GetLocationsOk() ([]LocationWithId, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locations, true
}

// SetLocations sets field value
func (o *LocationsResponse) SetLocations(v []LocationWithId) {
	o.Locations = v
}

func (o LocationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locations"] = o.Locations
	return toSerialize, nil
}

type NullableLocationsResponse struct {
	value *LocationsResponse
	isSet bool
}

func (v NullableLocationsResponse) Get() *LocationsResponse {
	return v.value
}

func (v *NullableLocationsResponse) Set(val *LocationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationsResponse(val *LocationsResponse) *NullableLocationsResponse {
	return &NullableLocationsResponse{value: val, isSet: true}
}

func (v NullableLocationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


