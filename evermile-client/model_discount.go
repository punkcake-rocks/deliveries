/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the Discount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Discount{}

// Discount A discount object
type Discount struct {
	// The item's list price (before discount) in cents/pence. E.G. \"500\" = 5 GBP
	ListPriceCents int64 `json:"listPriceCents"`
	// The discount percentage
	DiscountPercent int64 `json:"discountPercent"`
	// The discount reason
	Reason string `json:"reason"`
}

// NewDiscount instantiates a new Discount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscount(listPriceCents int64, discountPercent int64, reason string) *Discount {
	this := Discount{}
	this.ListPriceCents = listPriceCents
	this.DiscountPercent = discountPercent
	this.Reason = reason
	return &this
}

// NewDiscountWithDefaults instantiates a new Discount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscountWithDefaults() *Discount {
	this := Discount{}
	return &this
}

// GetListPriceCents returns the ListPriceCents field value
func (o *Discount) GetListPriceCents() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ListPriceCents
}

// GetListPriceCentsOk returns a tuple with the ListPriceCents field value
// and a boolean to check if the value has been set.
func (o *Discount) GetListPriceCentsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListPriceCents, true
}

// SetListPriceCents sets field value
func (o *Discount) SetListPriceCents(v int64) {
	o.ListPriceCents = v
}

// GetDiscountPercent returns the DiscountPercent field value
func (o *Discount) GetDiscountPercent() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DiscountPercent
}

// GetDiscountPercentOk returns a tuple with the DiscountPercent field value
// and a boolean to check if the value has been set.
func (o *Discount) GetDiscountPercentOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountPercent, true
}

// SetDiscountPercent sets field value
func (o *Discount) SetDiscountPercent(v int64) {
	o.DiscountPercent = v
}

// GetReason returns the Reason field value
func (o *Discount) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *Discount) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *Discount) SetReason(v string) {
	o.Reason = v
}

func (o Discount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Discount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["listPriceCents"] = o.ListPriceCents
	toSerialize["discountPercent"] = o.DiscountPercent
	toSerialize["reason"] = o.Reason
	return toSerialize, nil
}

type NullableDiscount struct {
	value *Discount
	isSet bool
}

func (v NullableDiscount) Get() *Discount {
	return v.value
}

func (v *NullableDiscount) Set(val *Discount) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscount) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscount(val *Discount) *NullableDiscount {
	return &NullableDiscount{value: val, isSet: true}
}

func (v NullableDiscount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


