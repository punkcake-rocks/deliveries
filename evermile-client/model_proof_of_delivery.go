/*
Evermile Commercial Quotes and Booking API

This is Evermile's commercial API for handling delivery quotes and orders

API version: 1.0
Contact: support@evermile.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package EvermileClient

import (
	"encoding/json"
)

// checks if the ProofOfDelivery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProofOfDelivery{}

// ProofOfDelivery struct for ProofOfDelivery
type ProofOfDelivery struct {
	// The type of the proof of delivery
	Type string `json:"type"`
	// urls list of the specific proof type
	Urls []string `json:"urls,omitempty"`
}

// NewProofOfDelivery instantiates a new ProofOfDelivery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProofOfDelivery(type_ string) *ProofOfDelivery {
	this := ProofOfDelivery{}
	this.Type = type_
	return &this
}

// NewProofOfDeliveryWithDefaults instantiates a new ProofOfDelivery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProofOfDeliveryWithDefaults() *ProofOfDelivery {
	this := ProofOfDelivery{}
	return &this
}

// GetType returns the Type field value
func (o *ProofOfDelivery) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ProofOfDelivery) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ProofOfDelivery) SetType(v string) {
	o.Type = v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *ProofOfDelivery) GetUrls() []string {
	if o == nil || IsNil(o.Urls) {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProofOfDelivery) GetUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *ProofOfDelivery) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *ProofOfDelivery) SetUrls(v []string) {
	o.Urls = v
}

func (o ProofOfDelivery) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProofOfDelivery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Urls) {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableProofOfDelivery struct {
	value *ProofOfDelivery
	isSet bool
}

func (v NullableProofOfDelivery) Get() *ProofOfDelivery {
	return v.value
}

func (v *NullableProofOfDelivery) Set(val *ProofOfDelivery) {
	v.value = val
	v.isSet = true
}

func (v NullableProofOfDelivery) IsSet() bool {
	return v.isSet
}

func (v *NullableProofOfDelivery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProofOfDelivery(val *ProofOfDelivery) *NullableProofOfDelivery {
	return &NullableProofOfDelivery{value: val, isSet: true}
}

func (v NullableProofOfDelivery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProofOfDelivery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


